name: Build Workflow

on:
  workflow_dispatch:

jobs:
  apk:
    name: Generating APKs
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Assemble Staging release APK
        run: bash ./gradlew assembleDevDebug --stacktrace

      - name: Upload Debug APK
        uses: actions/upload-artifact@v1
        with:
          name: app-release
          path: app/build/outputs/apk/dev/debug/app-dev-debug.apk

      - name: Branch name from push
        if: github.event_name == 'push'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
          echo "$GITHUB_CONTEXT"
          echo ${{ github.head_ref }}
          echo "##[set-output name=branch_push;]$(echo ${{ github.head_ref }})"
        id: extract_branch_push

      - name: "[Push] Get commit message"
        if: github.event_name == 'push'
        id: push_get_commit_message
        run:
          echo ::set-output name=push_commit_message::$(git log --format=%B -n 1 HEAD)

      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run:
          echo ::set-output name=pr_commit_message::$(git log --format=%B -n 1 HEAD^2)

      - name: upload QA build to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1.2.1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_DEBUG }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: Testers
          file: app/build/outputs/apk/dev/debug/app-dev-debug.apk
          releaseNotes: "--QA-Debug-build \n--Branch Name: *${{ steps.extract_branch_push.outputs.branch_push }}*  \n--Release Notes: ${{ steps.pr_get_commit_message.outputs.pr_commit_message }} ${{ steps.push_get_commit_message.outputs.push_commit_message }}"